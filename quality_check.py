sample_list = ['LP6005324-DNA_H12', 'LP6005324-DNA_H07', 'LP6005324-DNA_G10', 'LP6005324-DNA_H05', 'LP6005324-DNA_H10', 'LP6005324-DNA_H11', 'LP6005324-DNA_G07', 'LP6005324-DNA_H03', 'LP6005324-DNA_G09', 'LP6005324-DNA_H01', 'LP6005324-DNA_H04', 'LP6005324-DNA_G11', 'LP6005324-DNA_H06', 'LP6005324-DNA_G08', 'LP6005324-DNA_H08', 'LP6005324-DNA_H09', 'LP6005324-DNA_H02', 'LP6005324-DNA_G12', 'LP6005324-DNA_F10', 'LP6005324-DNA_F05', 'LP6005324-DNA_F07', 'LP6005324-DNA_G01', 'LP6005324-DNA_G05', 'LP6005324-DNA_G04', 'LP6005324-DNA_F01', 'LP6005324-DNA_G03', 'LP6005324-DNA_F03', 'LP6005324-DNA_F12', 'LP6005324-DNA_E11', 'LP6005323-DNA_C01', 'LP6005324-DNA_F11', 'LP6005324-DNA_F08', 'LP6005324-DNA_F09', 'LP6005324-DNA_G06', 'LP6005324-DNA_F04', 'LP6005324-DNA_F02', 'LP6005324-DNA_F06', 'LP6005324-DNA_E12', 'LP6005324-DNA_G02', 'LP6005324-DNA_E09', 'LP6005324-DNA_D11', 'LP6005324-DNA_E02', 'LP6005324-DNA_E07', 'LP6005324-DNA_D07', 'LP6005324-DNA_D06', 'LP6005324-DNA_E03', 'LP6005324-DNA_E08', 'LP6005324-DNA_E06', 'LP6005324-DNA_E01', 'LP6005324-DNA_D05', 'LP6005324-DNA_E05', 'LP6005324-DNA_D12', 'LP6005324-DNA_E04', 'LP6005324-DNA_D08', 'LP6005324-DNA_E10', 'LP6005324-DNA_D10', 'LP6005324-DNA_D09', 'LP6005324-DNA_D02', 'LP6005324-DNA_C03', 'LP6005324-DNA_C11', 'LP6005324-DNA_C05', 'LP6005324-DNA_C02', 'LP6005324-DNA_C10', 'LP6005324-DNA_C04', 'LP6005324-DNA_C12', 'LP6005324-DNA_C06', 'LP6005324-DNA_B10', 'LP6005324-DNA_C09', 'LP6005324-DNA_D03', 'LP6005324-DNA_D01', 'LP6005324-DNA_C01', 'LP6005324-DNA_D04', 'LP6005324-DNA_C07', 'LP6005324-DNA_C08', 'LP6005324-DNA_B08', 'LP6005324-DNA_B12', 'LP6005324-DNA_B07', 'LP6005324-DNA_B09', 'LP6005324-DNA_B11', 'LP6005324-DNA_A02', 'LP6005324-DNA_A01', 'LP6005323-DNA_H02', 'LP6005324-DNA_A04', 'LP6005324-DNA_B04', 'LP6005324-DNA_B03', 'LP6005324-DNA_A07', 'LP6005324-DNA_A06', 'LP6005324-DNA_B05', 'LP6005324-DNA_A08', 'LP6005324-DNA_B02', 'LP6005324-DNA_A03', 'LP6005324-DNA_A05', 'LP6005324-DNA_A11', 'LP6005324-DNA_B01', 'LP6005323-DNA_H04', 'LP6005324-DNA_A10', 'LP6005323-DNA_H01', 'LP6005323-DNA_H03', 'LP6005324-DNA_B06', 'LP6005324-DNA_A09', 'LP6005324-DNA_A12', 'LP6005323-DNA_E04', 'LP6005323-DNA_F04', 'LP6005323-DNA_F02', 'LP6005323-DNA_E05', 'LP6005323-DNA_D05', 'LP6005323-DNA_G04', 'LP6005323-DNA_D01', 'LP6005323-DNA_C02', 'LP6005323-DNA_D03', 'LP6005323-DNA_G02', 'LP6005323-DNA_C05', 'LP6005323-DNA_C04', 'LP6005323-DNA_G01', 'LP6005323-DNA_F01', 'LP6005323-DNA_C03', 'LP6005323-DNA_E02', 'LP6005323-DNA_F03', 'LP6005323-DNA_D02', 'LP6005323-DNA_E03', 'LP6005323-DNA_D04', 'LP6005323-DNA_E01', 'LP6005323-DNA_G03', 'LP6005322-DNA_G12', 'LP6005323-DNA_A03', 'LP6005323-DNA_B04', 'LP6005322-DNA_H01', 'LP6005323-DNA_A04', 'LP6005322-DNA_H09', 'LP6005323-DNA_B03', 'LP6005322-DNA_H05', 'LP6005323-DNA_A02', 'LP6005322-DNA_H06', 'LP6005323-DNA_A05', 'LP6005323-DNA_B05', 'LP6005323-DNA_B02', 'LP6005322-DNA_H02', 'LP6005323-DNA_A01', 'LP6005323-DNA_B01', 'LP6005322-DNA_H03', 'LP6005322-DNA_H04', 'LP6005322-DNA_H07', 'LP6005322-DNA_H08', 'LP6005322-DNA_H11', 'LP6005322-DNA_H10', 'LP6005322-DNA_H12', 'LP6005322-DNA_F06', 'LP6005322-DNA_G08', 'LP6005322-DNA_F11', 'LP6005322-DNA_G10', 'LP6005322-DNA_G04', 'LP6005322-DNA_F03', 'LP6005322-DNA_F09', 'LP6005322-DNA_G01', 'LP6005322-DNA_G09', 'LP6005322-DNA_F10', 'LP6005322-DNA_F07', 'LP6005322-DNA_F02', 'LP6005322-DNA_F05', 'LP6005322-DNA_F12', 'LP6005322-DNA_G11', 'LP6005322-DNA_G02', 'LP6005322-DNA_G03', 'LP6005322-DNA_G07', 'LP6005322-DNA_F08', 'LP6005322-DNA_G06', 'LP6005322-DNA_G05', 'LP6005322-DNA_F04', 'LP6005322-DNA_E08', 'LP6005322-DNA_E06', 'LP6005322-DNA_D05', 'LP6005322-DNA_E11', 'LP6005322-DNA_E07', 'LP6005322-DNA_D02', 'LP6005322-DNA_D10', 'LP6005322-DNA_D11', 'LP6005322-DNA_D07', 'LP6005322-DNA_F01', 'LP6005322-DNA_D04', 'LP6005322-DNA_E02', 'LP6005322-DNA_D03', 'LP6005322-DNA_D09', 'LP6005322-DNA_E12', 'LP6005322-DNA_D12', 'LP6005322-DNA_D06', 'LP6005322-DNA_E01', 'LP6005322-DNA_E10', 'LP6005322-DNA_D08', 'LP6005322-DNA_E03', 'LP6005322-DNA_E05', 'LP6005322-DNA_E04', 'LP6005322-DNA_E09', 'LP6005322-DNA_D01', 'LP6005322-DNA_B09', 'LP6005322-DNA_C11', 'LP6005322-DNA_B10', 'LP6005322-DNA_B11', 'LP6005322-DNA_C02', 'LP6005322-DNA_C07', 'LP6005322-DNA_C09', 'LP6005322-DNA_C08', 'LP6005322-DNA_C12', 'LP6005322-DNA_C10', 'LP6005322-DNA_C01', 'LP6005322-DNA_C05', 'LP6005322-DNA_C03', 'LP6005322-DNA_B12', 'LP6005322-DNA_C04', 'LP6005322-DNA_C06', 'LP6005322-DNA_A09', 'LP6005322-DNA_B08', 'LP6005322-DNA_A07', 'LP6005322-DNA_A06', 'LP6005322-DNA_B07', 'LP6005322-DNA_B02', 'LP6005322-DNA_A10', 'LP6005322-DNA_B06', 'LP6005322-DNA_B01', 'LP6005322-DNA_B05', 'LP6005322-DNA_A11', 'LP6005322-DNA_A12', 'LP6005322-DNA_A08', 'LP6005322-DNA_B03', 'LP6005322-DNA_B04', 'LP6005322-DNA_A02', 'LP6005322-DNA_A01', 'LP6005322-DNA_A04', 'LP6005322-DNA_A05', 'LP6005322-DNA_A03', 'LP6005648-DNA_C03', 'LP6005648-DNA_C04', 'LP6005648-DNA_G04', 'LP6005648-DNA_H01', 'LP6005669-DNA_A01', 'LP6005648-DNA_E01', 'LP6005648-DNA_D03', 'LP6005669-DNA_B01', 'LP6005648-DNA_H04', 'LP6005648-DNA_H03', 'LP6005648-DNA_G01', 'LP6005648-DNA_E03', 'LP6005648-DNA_G03', 'LP6005669-DNA_C01', 'LP6005648-DNA_H02', 'LP6005648-DNA_E04', 'LP6005648-DNA_D04', 'LP6005648-DNA_G02', 'LP6005648-DNA_F01', 'LP6005648-DNA_F04', 'LP6005648-DNA_F02', 'LP6005648-DNA_F03', 'LP6005648-DNA_E02', 'LP6005648-DNA_D01', 'LP6005648-DNA_D02', 'LP6005648-DNA_C01', 'LP6005648-DNA_B04', 'LP6005648-DNA_A03', 'LP6005648-DNA_A04', 'LP6005648-DNA_B01', 'LP6005648-DNA_A02', 'LP6005647-DNA_H08', 'LP6005647-DNA_G12', 'LP6005648-DNA_B02', 'LP6005648-DNA_A05', 'LP6005647-DNA_H05', 'LP6005648-DNA_A01', 'LP6005648-DNA_C02', 'LP6005647-DNA_H06', 'LP6005647-DNA_H03', 'LP6005647-DNA_H12', 'LP6005647-DNA_H02', 'LP6005648-DNA_B03', 'LP6005647-DNA_H11', 'LP6005647-DNA_H09', 'LP6005647-DNA_H10', 'LP6005647-DNA_H01', 'LP6005647-DNA_H07', 'LP6005647-DNA_H04', 'LP6005647-DNA_F06', 'LP6005647-DNA_G05', 'LP6005647-DNA_G10', 'LP6005647-DNA_G11', 'LP6005647-DNA_F11', 'LP6005647-DNA_G06', 'LP6005647-DNA_F10', 'LP6005647-DNA_F05', 'LP6005647-DNA_F08', 'LP6005647-DNA_F07', 'LP6005647-DNA_G08', 'LP6005647-DNA_G02', 'LP6005647-DNA_G01', 'LP6005647-DNA_F12', 'LP6005647-DNA_G07', 'LP6005647-DNA_G03', 'LP6005647-DNA_G04', 'LP6005647-DNA_F09', 'LP6005647-DNA_G09', 'LP6005647-DNA_E06', 'LP6005647-DNA_D09', 'LP6005647-DNA_F04', 'LP6005647-DNA_D11', 'LP6005647-DNA_F01', 'LP6005647-DNA_D10', 'LP6005647-DNA_E09', 'LP6005647-DNA_E02', 'LP6005647-DNA_F03', 'LP6005647-DNA_E05', 'LP6005647-DNA_E07', 'LP6005647-DNA_D12', 'LP6005647-DNA_E01', 'LP6005647-DNA_F02', 'LP6005647-DNA_E04', 'LP6005647-DNA_E11', 'LP6005647-DNA_E10', 'LP6005647-DNA_E08', 'LP6005647-DNA_E12', 'LP6005647-DNA_C05', 'LP6005647-DNA_B11', 'LP6005647-DNA_D06', 'LP6005647-DNA_D05', 'LP6005647-DNA_B09', 'LP6005647-DNA_C06', 'LP6005647-DNA_C09', 'LP6005647-DNA_C01', 'LP6005647-DNA_D07', 'LP6005647-DNA_C12', 'LP6005647-DNA_C10', 'LP6005647-DNA_C07', 'LP6005647-DNA_C08', 'LP6005647-DNA_D08', 'LP6005647-DNA_B10', 'LP6005647-DNA_D01', 'LP6005647-DNA_D04', 'LP6005647-DNA_B12', 'LP6005647-DNA_C04', 'LP6005647-DNA_D02', 'LP6005647-DNA_C11', 'LP6005647-DNA_C02', 'LP6005647-DNA_A01', 'LP6005647-DNA_A06', 'LP6005647-DNA_B05', 'LP6005647-DNA_A03', 'LP6005647-DNA_B06', 'LP6005647-DNA_A09', 'LP6005647-DNA_B04', 'LP6005647-DNA_A11', 'LP6005647-DNA_A08', 'LP6005647-DNA_B07', 'LP6005647-DNA_A07', 'LP6005646-DNA_H11', 'LP6005646-DNA_H12', 'LP6005647-DNA_B08', 'LP6005647-DNA_A02', 'LP6005647-DNA_A04', 'LP6005647-DNA_A12', 'LP6005647-DNA_B03', 'LP6005647-DNA_B01', 'LP6005647-DNA_B02', 'LP6005647-DNA_A10', 'LP6005647-DNA_A05', 'LP6005646-DNA_H01', 'LP6005646-DNA_G02', 'LP6005646-DNA_H05', 'LP6005646-DNA_G06', 'LP6005646-DNA_G03', 'LP6005646-DNA_H06', 'LP6005646-DNA_H04', 'LP6005646-DNA_H03', 'LP6005646-DNA_G08', 'LP6005646-DNA_G05', 'LP6005646-DNA_G04', 'LP6005646-DNA_G07', 'LP6005646-DNA_H02', 'LP6005646-DNA_H10', 'LP6005646-DNA_H07', 'LP6005646-DNA_G12', 'LP6005646-DNA_H08', 'LP6005646-DNA_G10', 'LP6005646-DNA_G09', 'LP6005646-DNA_H09', 'LP6005646-DNA_G11', 'LP6005646-DNA_F01', 'LP6005646-DNA_E05', 'LP6005646-DNA_E06', 'LP6005646-DNA_E04', 'LP6005646-DNA_E02', 'LP6005646-DNA_F05', 'LP6005646-DNA_G01', 'LP6005646-DNA_F03', 'LP6005646-DNA_E03', 'LP6005646-DNA_F06', 'LP6005646-DNA_F02', 'LP6005646-DNA_E12', 'LP6005646-DNA_F04', 'LP6005646-DNA_E10', 'LP6005646-DNA_F10', 'LP6005646-DNA_F09', 'LP6005646-DNA_F07', 'LP6005646-DNA_F12', 'LP6005646-DNA_F08', 'LP6005646-DNA_E11', 'LP6005646-DNA_E07', 'LP6005646-DNA_F11', 'LP6005646-DNA_E09', 'LP6005646-DNA_E08', 'LP6005646-DNA_D01', 'LP6005646-DNA_D06', 'LP6005646-DNA_D03', 'LP6005646-DNA_D05', 'LP6005646-DNA_D04', 'LP6005646-DNA_E01', 'LP6005646-DNA_D09', 'LP6005646-DNA_D02', 'LP6005646-DNA_D11', 'LP6005646-DNA_D10', 'LP6005646-DNA_D07', 'LP6005646-DNA_C12', 'LP6005646-DNA_D12', 'LP6005646-DNA_D08', 'LP6005646-DNA_A04', 'LP6005646-DNA_C06', 'LP6005646-DNA_A06', 'LP6005646-DNA_B06', 'LP6005646-DNA_A05', 'LP6005646-DNA_C05', 'LP6005646-DNA_C08', 'LP6005646-DNA_A01', 'LP6005646-DNA_B01', 'LP6005646-DNA_A03', 'LP6005646-DNA_B05', 'LP6005646-DNA_C11', 'LP6005646-DNA_C02', 'LP6005646-DNA_C04', 'LP6005646-DNA_C01', 'LP6005646-DNA_C03', 'LP6005646-DNA_B03', 'LP6005646-DNA_A02', 'LP6005646-DNA_B04', 'LP6005646-DNA_B02', 'LP6005646-DNA_A12', 'LP6005646-DNA_A10', 'LP6005646-DNA_B11', 'LP6005646-DNA_A07', 'LP6005646-DNA_C07', 'LP6005646-DNA_C09', 'LP6005646-DNA_B07', 'LP6005646-DNA_B12', 'LP6005646-DNA_A08', 'LP6005646-DNA_C10', 'LP6005646-DNA_B10', 'LP6005646-DNA_B08', 'LP6005646-DNA_A09', 'LP6005646-DNA_B09', 'LP6005646-DNA_A11']


class vcfIterator(object):

    def __init__(self, file):
        self.file = file
        with open(self.file) as vcf:
            info = []
            alt = []
            format = []
            sample = []
            header = None
            self.count = 0
            for line in vcf:
                if '##INFO' in line:
                    line_strip = line.strip('\n')
                    equal_split = line_strip.split('=')
                    comma_split = equal_split[2].split(',')
                    info.append(comma_split[0])
                elif '##ALT' in line:
                    line_strip = line.strip('\n')
                    equal_split = line_strip.split('=')
                    comma_split = equal_split[2].split(',')
                    alt.append(comma_split[0])
                elif '##FORMAT' in line:
                    line_strip = line.strip('\n')
                    equal_split = line_strip.split('=')
                    comma_split = equal_split[2].split(',')
                    format.append(comma_split[0])
                elif '##SAMPLE' in line:
                    line_strip = line.strip('\n')
                    equal_split = line_strip.split('=')
                    comma_split = equal_split[2].split(',')
                    sample.append(comma_split[0])
                elif '#CHROM' in line:
                    line_strip = line.strip('\n')
                    header = line_strip.split('\t')
                    break
                self.count += 1
            self.info = info
            self.alt = alt
            self.format = format
            self.sample = sample
            self.header = header

    def __iter__(self):
        count = 0
        with open(self.file) as vcf:
            for line in vcf:
                if count > self.count:
                    yield (line)
                count += 1


line_count = []

for i in sample_list:
    try:
        vcf = vcfIterator(i + '.svtyper.vcf')
        count = 0
        for x in vcf:
            count += 1
        line_count.append(count)
        print(count)
    except FileNotFoundError:
        print(i + '.svtyper.vcf')


out = open('quality.txt', 'w')
for count, i in enumerate(line_count):
    out.write(sample_list[count] + '\t' + str(i) + '\n')
out.close()
